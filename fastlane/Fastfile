# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

fastlane_require 'dotenv'
import "ClientDeliveryFastfile"
import "BetaDeliveryFastfile"

######################### CONSTANTS #########################

#------------------------ fastlane -------------------------#

# declare something

#------------------------- XCode ---------------------------#

# the target name
scheme_name = ENV['SCHEME_NAME']

# the Xcode project path
xcodeproj_path = ENV['XCODE_PROJ_PATH']

# the app bundle identifier i.e. com.awesomecompany.awesomeproject
current_app_bundle_identifier = ENV["BUNDLE_IDENTIFIER"]

# the service we use to deliver our archived .ipa i.e. Fabric / Testflight
build_service = ENV["BUILD_SERVICE"]

# the dev portal team identifier
team_id = ENV["TEAM_ID"]

# app build configuration defined in the .env file
# i.e. debug, staging, uat, production
build_configuration = ENV["BUILD_CONFIGURATION"]

# build changelog if needed
changelog = ENV["CHANGELOG"]

# the temporary keychain name
keychain_name = ENV['KEYCHAIN_NAME']

# the temporary keychain password
keychain_password = ENV['KEYCHAIN_PASSWORD']

# the app export method defined in the .env file i.e. adhoc, appstore
export_method = ENV['EXPORT_METHOD']

###################### END CONSTANTS ########################

#----------------------- FASTLANE -------------------------#

default_platform :ios

platform :ios do

  before_all do

      # called everytime a fastlane action is being executed

      # loading dotenv files
      load_dotenv
      fastlane_version ENV['FASTLANE_MIN_VERSION']

  end

########################## PUBLIC LANES #########################

  desc "Test the .env convention implementation"
  lane :test_dotenv do

    lane_name = lane_context[SharedValues::LANE_NAME]
    env_var_content = ENV['ENV_VAR_TEST']

    puts "Testing #{lane_name}"
    puts "You are testing the dotenv lane, here is the string loaded..."
    puts "#{env_var_content}"

  end

  desc "Test the external import of the two Fastfiles"
  lane :test_external_fastfile_import do

    client_delivery_laod_test_lane
    beta_delivery_laod_test_lane
    puts "External lane loaded from a different Fastfile succeeded âœ…"

  end

####################### END PUBLIC LANES ########################

######################### PRIVATE LANES #########################

  desc "Load dotev files"
  private_lane :load_dotenv do

    dotenv_path = 'developer_files/env'
    dotenv_scheme = ENV['CLIENT']
    dotenv_configuration = ENV['ENVIRONMENT']

    Dotenv.load("#{dotenv_path}/.env")
    Dotenv.overload("#{dotenv_path}/#{dotenv_scheme}/#{dotenv_scheme}-#{dotenv_configuration}.env")

  end

##################### END PRIVATE LANES #########################

end
